{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/task/task.component.css","webpack:///./src/app/task/task.component.html","webpack:///./src/app/task/task.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<fieldset>\\n  <form (submit) = \\\"onSubmit()\\\" class=\\\"postForm\\\">\\n    <p>{{newTask | json}}</p>\\n    <label>Task name:\\n      <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"newTask.name\\\"  />\\n    </label>\\n    <label>Task description:\\n      <input type=\\\"text\\\" name=\\\"description\\\"[(ngModel)]=\\\"newTask.description\\\"  />\\n    </label>\\n    <label>Task title:\\n      <input type=\\\"text\\\" name=\\\"title\\\"[(ngModel)]=\\\"newTask.title\\\" />\\n    </label>\\n    <input type=\\\"submit\\\" value=\\\"Create Task\\\" />\\n  </form>\\n</fieldset>\\n<h1><button (click)=\\\"tasksOnClick()\\\">click me to get some tasks</button></h1>\\n<h2>The Task: </h2>\\n<p>{{tasks['data']}}</p>\\n<input (keyup)=\\\"taskOnClick($event)\\\">\\n\\n<div *ngFor=\\\"let x of tasks['data']\\\">\\n <p><a href=\\\"/tasks/{{x['_id']}}\\\">{{x['_id']}}:</a> {{x['name']}} - {{x['description']}}</p>\\n <form (submit) = \\\"onDelete(x._id)\\\" class=\\\"postForm\\\">\\n    <input type=\\\"submit\\\" value=\\\"DELETE\\\" />\\n</form>\\n<button (click)='showOne(x._id)'>show</button>\\n<form (submit) = \\\"editOnClick(x)\\\" class=\\\"postForm\\\">\\n    <input type=\\\"submit\\\" value=\\\"EDIT\\\" />\\n</form>\\n<div *ngIf=\\\"x.showEditForm\\\">\\n  <form (submit) = \\\"onEdit(x)\\\" class=\\\"postForm\\\">\\n    {{x.title}}\\n    <label>Title:\\n      <input type=\\\"text\\\" name=\\\"editTask.title\\\" [(ngModel)] = \\\"x.title\\\" />\\n    </label>\\n    <label>Description:\\n      <input type=\\\"text\\\" name=\\\"editTask.description\\\" [(ngModel)] = \\\"x.description\\\" />\\n    </label>\\n    <input type=\\\"submit\\\" value=\\\"EDIT\\\" />\\n  </form>\\n</div>\\n</div>\\n<app-task [showOne]='task'></app-task>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './http.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'app';\n  tasks = {};\n  task = {};\n  id = '';\n  newTask: any;\n  editTask = [];\n  showEditForm = false;\n  self = this;\n  constructor(private _httpService: HttpService) { }\n  ngOnInit(){\n    this.newTask = { name:\"\",title: \"\", description: \"\" }\n    this.tasksOnClick();\n\n  }\n  tasksOnClick() {\n    this._httpService.getTasks().subscribe(data => {\n      console.log(\"Got our data!\", data)\n      this.tasks = data;\n      console.log(\"Got our tasks!\", this.tasks)\n    })\n  }\n  showOne(id: String) {\n    // get one planet\n    this._httpService.getTask(id).subscribe(response =>{\n      console.log(response);\n      this.task = response;\n    })\n    // set the planet to the child component using Inputs\n  }\n  taskOnClick(event: any){\n    this.task = [];\n    this.id = event.target.value;\n    let observable = this._httpService.getTask(this.id)\n    observable.subscribe(data => {\n      console.log(\"Clicked the button!\", this.id)\n      this.task = data;\n      console.log(\"Got our task!\", this.task)\n    })\n  }\n  onDelete(id){\n    let observable = this._httpService.Delete(id);\n    observable.subscribe(data => {\n      console.log(\"Got data from post back\", data);\n      this.tasksOnClick();\n    })\n  }\n  onSubmit(){\n    let observable = this._httpService.addTask(this.newTask);\n    observable.subscribe(data => {\n      console.log(\"Got data from post back\", data);\n      this.newTask = {title: \"\", description: \"\"}\n      this.tasksOnClick();\n    })\n  }\n  editOnClick(task){\n    console.log(\"Task we need to edit\", task._id);\n      console.log(\"Task to edit\", task, \"Task title\", task.title);\n      task.showEditForm = true;\n  }\n  onEdit(editTask){\n    editTask.showEditForm = false;\n    console.log(\"Edit the task\", editTask._id)\n    let observable = this._httpService.editTask(editTask);\n    observable.subscribe(data => {\n      console.log(\"Got data from post back\", data);\n    })\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpService } from './http.service';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { TaskComponent } from './task/task.component'; // <-- import FormsModule.\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TaskComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n  constructor(private _http: HttpClient){\n   //   this.getTasks();\n   }\n   getTasks(){\n   // our http response is an Observable, store it in a variable\n      return this._http.get('/tasks');\n   // subscribe to the Observable and provide the code we would like to do with our data from the response\n      \n   }\n   getTask(task_id){\n      console.log('ID is', task_id);\n      console.log(task_id);\n      // let tempObservable = this._http.get('/tasks/5a84f4c3d7dee2b8012d96ae');\n      // tempObservable.subscribe(data => console.log(\"Got the task!\", data));\n      return this._http.get('/tasks/'+task_id);\n    }\n    Delete(id){\n      return this._http.delete('/tasks/'+id);\n    }\n    addTask(newtask){\n      return this._http.post('/tasks', newtask);\n    }\n    editTask(editTask){\n      console.log('request to edit', editTask._id);\n      return this._http.patch('/tasks/'+editTask._id, editTask);\n    }\n  }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2svdGFzay5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div>\\n  <p>\\n    {{ showOne | json}}\\n  </p>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\nexport class TaskComponent implements OnInit {\n  @Input() showOne: any;\n\n  constructor() { }\n\n  ngOnInit() {\n    console.log('in showone component', this.showOne);\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}